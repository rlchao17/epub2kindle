<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="Installing Python Modules" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/installing/index.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="Email, distutils-sig@python.org,. As a popular open source development project, Python has an active supporting community of contributors and users that also make their software available for other..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="Email, distutils-sig@python.org,. As a popular open source development project, Python has an active supporting community of contributors and users that also make their software available for other..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>Installing Python Modules</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    
    <link rel="canonical" href="https://docs.python.org/3/installing/index.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="installing-python-modules">
<span id="installing-index"></span><h1>Installing Python Modules</h1>
<dl class="field-list simple">
<dt class="field-odd">Email<span class="colon">:</span></dt>
<dd class="field-odd"><p><a class="reference external" href="mailto:distutils-sig&#37;&#52;&#48;python&#46;org">distutils-sig<span>&#64;</span>python<span>&#46;</span>org</a></p>
</dd>
</dl>
<p>As a popular open source development project, Python has an active
supporting community of contributors and users that also make their software
available for other Python developers to use under open source license terms.</p>
<p>This allows Python users to share and collaborate effectively, benefiting
from the solutions others have already created to common (and sometimes
even rare!) problems, as well as potentially contributing their own
solutions to the common pool.</p>
<p>This guide covers the installation part of the process. For a guide to
creating and sharing your own Python projects, refer to the
<a class="reference external" href="https://packaging.python.org/en/latest/tutorials/packaging-projects/">Python packaging user guide</a><span class="link-target"> [https://packaging.python.org/en/latest/tutorials/packaging-projects/]</span>.</p>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>For corporate and other institutional users, be aware that many
organisations have their own policies around using and contributing to
open source software. Please take such policies into account when making
use of the distribution and installation tools provided with Python.</p>
</div>
<section id="key-terms">
<h2>Key terms</h2>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">pip</span></code> is the preferred installer program. Starting with Python 3.4, it
is included by default with the Python binary installers.</p></li>
<li><p>A <em>virtual environment</em> is a semi-isolated Python environment that allows
packages to be installed for use by a particular application, rather than
being installed system wide.</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">venv</span></code> is the standard tool for creating virtual environments, and has
been part of Python since Python 3.3. Starting with Python 3.4, it
defaults to installing <code class="docutils literal notranslate"><span class="pre">pip</span></code> into all created virtual environments.</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">virtualenv</span></code> is a third party alternative (and predecessor) to
<code class="docutils literal notranslate"><span class="pre">venv</span></code>. It allows virtual environments to be used on versions of
Python prior to 3.4, which either don’t provide <code class="docutils literal notranslate"><span class="pre">venv</span></code> at all, or
aren’t able to automatically install <code class="docutils literal notranslate"><span class="pre">pip</span></code> into created environments.</p></li>
<li><p>The <a class="reference external" href="https://pypi.org">Python Package Index</a><span class="link-target"> [https://pypi.org]</span> is a public
repository of open source licensed packages made available for use by
other Python users.</p></li>
<li><p>the <a class="reference external" href="https://www.pypa.io/">Python Packaging Authority</a><span class="link-target"> [https://www.pypa.io/]</span> is the group of
developers and documentation authors responsible for the maintenance and
evolution of the standard packaging tools and the associated metadata and
file format standards. They maintain a variety of tools, documentation,
and issue trackers on <a class="reference external" href="https://github.com/pypa">GitHub</a><span class="link-target"> [https://github.com/pypa]</span>.</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">distutils</span></code> is the original build and distribution system first added to
the Python standard library in 1998. While direct use of <code class="docutils literal notranslate"><span class="pre">distutils</span></code> is
being phased out, it still laid the foundation for the current packaging
and distribution infrastructure, and it not only remains part of the
standard library, but its name lives on in other ways (such as the name
of the mailing list used to coordinate Python packaging standards
development).</p></li>
</ul>
<div class="versionchanged">
<p><span class="versionmodified changed">Changed in version 3.5: </span>The use of <code class="docutils literal notranslate"><span class="pre">venv</span></code> is now recommended for creating virtual environments.</p>
</div>
<div class="admonition seealso">
<p class="admonition-title">See also</p>
<p><a class="reference external" href="https://packaging.python.org/installing/#creating-virtual-environments">Python Packaging User Guide: Creating and using virtual environments</a><span class="link-target"> [https://packaging.python.org/installing/#creating-virtual-environments]</span></p>
</div>
</section>
<section id="basic-usage">
<h2>Basic usage</h2>
<p>The standard packaging tools are all designed to be used from the command
line.</p>
<p>The following command will install the latest version of a module and its
dependencies from the Python Package Index:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>python -m pip install SomePackage
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>For POSIX users (including macOS and Linux users), the examples in
this guide assume the use of a <a class="reference internal" href="../glossary.xhtml#term-virtual-environment"><span class="xref std std-term">virtual environment</span></a>.</p>
<p>For Windows users, the examples in this guide assume that the option to
adjust the system PATH environment variable was selected when installing
Python.</p>
</div>
<p>It’s also possible to specify an exact or minimum version directly on the
command line. When using comparator operators such as <code class="docutils literal notranslate"><span class="pre">&gt;</span></code>, <code class="docutils literal notranslate"><span class="pre">&lt;</span></code> or some other
special character which get interpreted by shell, the package name and the
version should be enclosed within double quotes:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>python -m pip install SomePackage==1.0.4    # specific version
python -m pip install &quot;SomePackage&gt;=1.0.4&quot;  # minimum version
</pre></div>
</div>
<p>Normally, if a suitable module is already installed, attempting to install
it again will have no effect. Upgrading existing modules must be requested
explicitly:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>python -m pip install --upgrade SomePackage
</pre></div>
</div>
<p>More information and resources regarding <code class="docutils literal notranslate"><span class="pre">pip</span></code> and its capabilities can be
found in the <a class="reference external" href="https://packaging.python.org">Python Packaging User Guide</a><span class="link-target"> [https://packaging.python.org]</span>.</p>
<p>Creation of virtual environments is done through the <a class="reference internal" href="../library/venv.xhtml#module-venv" title="venv: Creation of virtual environments."><code class="xref py py-mod docutils literal notranslate"><span class="pre">venv</span></code></a> module.
Installing packages into an active virtual environment uses the commands shown
above.</p>
<div class="admonition seealso">
<p class="admonition-title">See also</p>
<p><a class="reference external" href="https://packaging.python.org/installing/">Python Packaging User Guide: Installing Python Distribution Packages</a><span class="link-target"> [https://packaging.python.org/installing/]</span></p>
</div>
</section>
<section id="how-do-i">
<h2>How do I …?</h2>
<p>These are quick answers or links for some common tasks.</p>
<section id="install-pip-in-versions-of-python-prior-to-python-3-4">
<h3>… install <code class="docutils literal notranslate"><span class="pre">pip</span></code> in versions of Python prior to Python 3.4?</h3>
<p>Python only started bundling <code class="docutils literal notranslate"><span class="pre">pip</span></code> with Python 3.4. For earlier versions,
<code class="docutils literal notranslate"><span class="pre">pip</span></code> needs to be “bootstrapped” as described in the Python Packaging
User Guide.</p>
<div class="admonition seealso">
<p class="admonition-title">See also</p>
<p><a class="reference external" href="https://packaging.python.org/installing/#requirements-for-installing-packages">Python Packaging User Guide: Requirements for Installing Packages</a><span class="link-target"> [https://packaging.python.org/installing/#requirements-for-installing-packages]</span></p>
</div>
</section>
<section id="install-packages-just-for-the-current-user">
<h3>… install packages just for the current user?</h3>
<p>Passing the <code class="docutils literal notranslate"><span class="pre">--user</span></code> option to <code class="docutils literal notranslate"><span class="pre">python</span> <span class="pre">-m</span> <span class="pre">pip</span> <span class="pre">install</span></code> will install a
package just for the current user, rather than for all users of the system.</p>
</section>
<section id="install-scientific-python-packages">
<h3>… install scientific Python packages?</h3>
<p>A number of scientific Python packages have complex binary dependencies, and
aren’t currently easy to install using <code class="docutils literal notranslate"><span class="pre">pip</span></code> directly. At this point in
time, it will often be easier for users to install these packages by
<a class="reference external" href="https://packaging.python.org/science/">other means</a><span class="link-target"> [https://packaging.python.org/science/]</span>
rather than attempting to install them with <code class="docutils literal notranslate"><span class="pre">pip</span></code>.</p>
<div class="admonition seealso">
<p class="admonition-title">See also</p>
<p><a class="reference external" href="https://packaging.python.org/science/">Python Packaging User Guide: Installing Scientific Packages</a><span class="link-target"> [https://packaging.python.org/science/]</span></p>
</div>
</section>
<section id="work-with-multiple-versions-of-python-installed-in-parallel">
<h3>… work with multiple versions of Python installed in parallel?</h3>
<p>On Linux, macOS, and other POSIX systems, use the versioned Python commands
in combination with the <code class="docutils literal notranslate"><span class="pre">-m</span></code> switch to run the appropriate copy of
<code class="docutils literal notranslate"><span class="pre">pip</span></code>:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>python2   -m pip install SomePackage  # default Python 2
python2.7 -m pip install SomePackage  # specifically Python 2.7
python3   -m pip install SomePackage  # default Python 3
python3.4 -m pip install SomePackage  # specifically Python 3.4
</pre></div>
</div>
<p>Appropriately versioned <code class="docutils literal notranslate"><span class="pre">pip</span></code> commands may also be available.</p>
<p>On Windows, use the <code class="docutils literal notranslate"><span class="pre">py</span></code> Python launcher in combination with the <code class="docutils literal notranslate"><span class="pre">-m</span></code>
switch:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>py -2   -m pip install SomePackage  # default Python 2
py -2.7 -m pip install SomePackage  # specifically Python 2.7
py -3   -m pip install SomePackage  # default Python 3
py -3.4 -m pip install SomePackage  # specifically Python 3.4
</pre></div>
</div>
</section>
</section>
<section id="common-installation-issues">
<h2>Common installation issues</h2>
<section id="installing-into-the-system-python-on-linux">
<h3>Installing into the system Python on Linux</h3>
<p>On Linux systems, a Python installation will typically be included as part
of the distribution. Installing into this Python installation requires
root access to the system, and may interfere with the operation of the
system package manager and other components of the system if a component
is unexpectedly upgraded using <code class="docutils literal notranslate"><span class="pre">pip</span></code>.</p>
<p>On such systems, it is often better to use a virtual environment or a
per-user installation when installing packages with <code class="docutils literal notranslate"><span class="pre">pip</span></code>.</p>
</section>
<section id="pip-not-installed">
<h3>Pip not installed</h3>
<p>It is possible that <code class="docutils literal notranslate"><span class="pre">pip</span></code> does not get installed by default. One potential fix is:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>python -m ensurepip --default-pip
</pre></div>
</div>
<p>There are also additional resources for <a class="reference external" href="https://packaging.python.org/en/latest/tutorials/installing-packages/#ensure-pip-setuptools-and-wheel-are-up-to-date">installing pip.</a><span class="link-target"> [https://packaging.python.org/en/latest/tutorials/installing-packages/#ensure-pip-setuptools-and-wheel-are-up-to-date]</span></p>
</section>
<section id="installing-binary-extensions">
<h3>Installing binary extensions</h3>
<p>Python has typically relied heavily on source based distribution, with end
users being expected to compile extension modules from source as part of
the installation process.</p>
<p>With the introduction of support for the binary <code class="docutils literal notranslate"><span class="pre">wheel</span></code> format, and the
ability to publish wheels for at least Windows and macOS through the
Python Package Index, this problem is expected to diminish over time,
as users are more regularly able to install pre-built extensions rather
than needing to build them themselves.</p>
<p>Some of the solutions for installing <a class="reference external" href="https://packaging.python.org/science/">scientific software</a><span class="link-target"> [https://packaging.python.org/science/]</span>
that are not yet available as pre-built <code class="docutils literal notranslate"><span class="pre">wheel</span></code> files may also help with
obtaining other binary extensions without needing to build them locally.</p>
<div class="admonition seealso">
<p class="admonition-title">See also</p>
<p><a class="reference external" href="https://packaging.python.org/extensions/">Python Packaging User Guide: Binary Extensions</a><span class="link-target"> [https://packaging.python.org/extensions/]</span></p>
</div>
</section>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>