<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="asyncio — Asynchronous I/O" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/asyncio.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="Hello World!: asyncio is a library to write concurrent code using the async/await syntax. asyncio is used as a foundation for multiple Python asynchronous frameworks that provide high-performance n..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="Hello World!: asyncio is a library to write concurrent code using the async/await syntax. asyncio is used as a foundation for multiple Python asynchronous frameworks that provide high-performance n..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>asyncio — Asynchronous I/O</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    
    <link rel="canonical" href="https://docs.python.org/3/library/asyncio.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-asyncio">
<span id="asyncio-asynchronous-i-o"></span><h1><code class="xref py py-mod docutils literal notranslate"><span class="pre">asyncio</span></code> — Asynchronous I/O</h1>
<hr class="docutils" />
<aside class="sidebar">
<p class="sidebar-title">Hello World!</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="kn">import</span><span class="w"> </span><span class="nn">asyncio</span>

<span class="k">async</span> <span class="k">def</span><span class="w"> </span><span class="nf">main</span><span class="p">():</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Hello ...&#39;</span><span class="p">)</span>
    <span class="k">await</span> <span class="n">asyncio</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;... World!&#39;</span><span class="p">)</span>

<span class="n">asyncio</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">main</span><span class="p">())</span>
</pre></div>
</div>
</aside>
<p>asyncio is a library to write <strong>concurrent</strong> code using
the <strong>async/await</strong> syntax.</p>
<p>asyncio is used as a foundation for multiple Python asynchronous
frameworks that provide high-performance network and web-servers,
database connection libraries, distributed task queues, etc.</p>
<p>asyncio is often a perfect fit for IO-bound and high-level
<strong>structured</strong> network code.</p>
<p>asyncio provides a set of <strong>high-level</strong> APIs to:</p>
<ul class="simple">
<li><p><a class="reference internal" href="asyncio-task.xhtml#coroutine"><span class="std std-ref">run Python coroutines</span></a> concurrently and
have full control over their execution;</p></li>
<li><p>perform <a class="reference internal" href="asyncio-stream.xhtml#asyncio-streams"><span class="std std-ref">network IO and IPC</span></a>;</p></li>
<li><p>control <a class="reference internal" href="asyncio-subprocess.xhtml#asyncio-subprocess"><span class="std std-ref">subprocesses</span></a>;</p></li>
<li><p>distribute tasks via <a class="reference internal" href="asyncio-queue.xhtml#asyncio-queues"><span class="std std-ref">queues</span></a>;</p></li>
<li><p><a class="reference internal" href="asyncio-sync.xhtml#asyncio-sync"><span class="std std-ref">synchronize</span></a> concurrent code;</p></li>
</ul>
<p>Additionally, there are <strong>low-level</strong> APIs for
<em>library and framework developers</em> to:</p>
<ul class="simple">
<li><p>create and manage <a class="reference internal" href="asyncio-eventloop.xhtml#asyncio-event-loop"><span class="std std-ref">event loops</span></a>, which
provide asynchronous APIs for <a class="reference internal" href="asyncio-eventloop.xhtml#loop-create-server"><span class="std std-ref">networking</span></a>,
running <a class="reference internal" href="asyncio-eventloop.xhtml#loop-subprocess-exec"><span class="std std-ref">subprocesses</span></a>,
handling <a class="reference internal" href="asyncio-eventloop.xhtml#loop-add-signal-handler"><span class="std std-ref">OS signals</span></a>, etc;</p></li>
<li><p>implement efficient protocols using
<a class="reference internal" href="asyncio-protocol.xhtml#asyncio-transports-protocols"><span class="std std-ref">transports</span></a>;</p></li>
<li><p><a class="reference internal" href="asyncio-future.xhtml#asyncio-futures"><span class="std std-ref">bridge</span></a> callback-based libraries and code
with async/await syntax.</p></li>
</ul>
<div class="availability docutils container">
<p><a class="reference internal" href="intro.xhtml#availability"><span class="std std-ref">Availability</span></a>: not WASI.</p>
<p>This module does not work or is not available on WebAssembly. See
<a class="reference internal" href="intro.xhtml#wasm-availability"><span class="std std-ref">WebAssembly platforms</span></a> for more information.</p>
</div>
<p class="rubric" id="asyncio-cli">asyncio REPL</p>
<p>You can experiment with an <code class="docutils literal notranslate"><span class="pre">asyncio</span></code> concurrent context in the <a class="reference internal" href="../glossary.xhtml#term-REPL"><span class="xref std std-term">REPL</span></a>:</p>
<div class="highlight-pycon notranslate"><div class="highlight"><pre><span></span><span class="go">$ python -m asyncio</span>
<span class="go">asyncio REPL ...</span>
<span class="go">Use &quot;await&quot; directly instead of &quot;asyncio.run()&quot;.</span>
<span class="go">Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</span>
<span class="gp">&gt;&gt;&gt; </span><span class="kn">import</span><span class="w"> </span><span class="nn">asyncio</span>
<span class="gp">&gt;&gt;&gt; </span><span class="k">await</span> <span class="n">asyncio</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="n">result</span><span class="o">=</span><span class="s1">&#39;hello&#39;</span><span class="p">)</span>
<span class="go">&#39;hello&#39;</span>
</pre></div>
</div>
<p class="audit-hook" id="audit_event_cpython_run_stdin_0">Raises an <a class="reference internal" href="sys.xhtml#auditing"><span class="std std-ref">auditing event</span></a> <code class="docutils literal notranslate"><span class="pre">cpython.run_stdin</span></code> with no arguments.</p>
<div class="versionchanged">
<p><span class="versionmodified changed">Changed in version 3.12.5: </span>(also 3.11.10, 3.10.15, 3.9.20, and 3.8.20)
Emits audit events.</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified changed">Changed in version 3.13: </span>Uses PyREPL if possible, in which case <span class="target" id="index-0"></span><a class="reference internal" href="../using/cmdline.xhtml#envvar-PYTHONSTARTUP"><code class="xref std std-envvar docutils literal notranslate"><span class="pre">PYTHONSTARTUP</span></code></a> is
also executed. Emits audit events.</p>
</div>
<p class="rubric">Reference</p>
<div class="toctree-wrapper compound">
<p class="caption" role="heading"><span class="caption-text">High-level APIs</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="asyncio-runner.xhtml">Runners</a></li>
<li class="toctree-l1"><a class="reference internal" href="asyncio-task.xhtml">Coroutines and Tasks</a></li>
<li class="toctree-l1"><a class="reference internal" href="asyncio-stream.xhtml">Streams</a></li>
<li class="toctree-l1"><a class="reference internal" href="asyncio-sync.xhtml">Synchronization Primitives</a></li>
<li class="toctree-l1"><a class="reference internal" href="asyncio-subprocess.xhtml">Subprocesses</a></li>
<li class="toctree-l1"><a class="reference internal" href="asyncio-queue.xhtml">Queues</a></li>
<li class="toctree-l1"><a class="reference internal" href="asyncio-exceptions.xhtml">Exceptions</a></li>
</ul>
</div>
<div class="toctree-wrapper compound">
<p class="caption" role="heading"><span class="caption-text">Low-level APIs</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="asyncio-eventloop.xhtml">Event Loop</a></li>
<li class="toctree-l1"><a class="reference internal" href="asyncio-future.xhtml">Futures</a></li>
<li class="toctree-l1"><a class="reference internal" href="asyncio-protocol.xhtml">Transports and Protocols</a></li>
<li class="toctree-l1"><a class="reference internal" href="asyncio-policy.xhtml">Policies</a></li>
<li class="toctree-l1"><a class="reference internal" href="asyncio-platforms.xhtml">Platform Support</a></li>
<li class="toctree-l1"><a class="reference internal" href="asyncio-extending.xhtml">Extending</a></li>
</ul>
</div>
<div class="toctree-wrapper compound">
<p class="caption" role="heading"><span class="caption-text">Guides and Tutorials</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="asyncio-api-index.xhtml">High-level API Index</a></li>
<li class="toctree-l1"><a class="reference internal" href="asyncio-llapi-index.xhtml">Low-level API Index</a></li>
<li class="toctree-l1"><a class="reference internal" href="asyncio-dev.xhtml">Developing with asyncio</a></li>
</ul>
</div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>The source code for asyncio can be found in <a class="extlink-source reference external" href="https://github.com/python/cpython/tree/3.13/Lib/asyncio/">Lib/asyncio/</a><span class="link-target"> [https://github.com/python/cpython/tree/3.13/Lib/asyncio/]</span>.</p>
</div>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>