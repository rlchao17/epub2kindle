<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="tkinter.dnd — Drag and drop support" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/tkinter.dnd.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="Source code: Lib/tkinter/dnd.py[https://github.com/python/cpython/tree/3.13/Lib/tkinter/dnd.py] The tkinter.dnd module provides drag-and-drop support for objects within a single application, within..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="Source code: Lib/tkinter/dnd.py[https://github.com/python/cpython/tree/3.13/Lib/tkinter/dnd.py] The tkinter.dnd module provides drag-and-drop support for objects within a single application, within..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>tkinter.dnd — Drag and drop support</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    
    <link rel="canonical" href="https://docs.python.org/3/library/tkinter.dnd.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-tkinter.dnd">
<span id="tkinter-dnd-drag-and-drop-support"></span><h1><code class="xref py py-mod docutils literal notranslate"><span class="pre">tkinter.dnd</span></code> — Drag and drop support</h1>
<p><strong>Source code:</strong> <a class="extlink-source reference external" href="https://github.com/python/cpython/tree/3.13/Lib/tkinter/dnd.py">Lib/tkinter/dnd.py</a><span class="link-target"> [https://github.com/python/cpython/tree/3.13/Lib/tkinter/dnd.py]</span></p>
<hr class="docutils" />
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>This is experimental and due to be deprecated when it is replaced
with the Tk DND.</p>
</div>
<p>The <a class="reference internal" href="#module-tkinter.dnd" title="tkinter.dnd: Tkinter drag-and-drop interface (Tk)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">tkinter.dnd</span></code></a> module provides drag-and-drop support for objects within
a single application, within the same window or between windows. To enable an
object to be dragged, you must create an event binding for it that starts the
drag-and-drop process. Typically, you bind a ButtonPress event to a callback
function that you write (see <a class="reference internal" href="tkinter.xhtml#bindings-and-events"><span class="std std-ref">Bindings and Events</span></a>). The function should
call <a class="reference internal" href="#tkinter.dnd.dnd_start" title="tkinter.dnd.dnd_start"><code class="xref py py-func docutils literal notranslate"><span class="pre">dnd_start()</span></code></a>, where ‘source’ is the object to be dragged, and ‘event’
is the event that invoked the call (the argument to your callback function).</p>
<p>Selection of a target object occurs as follows:</p>
<ol class="arabic simple">
<li><p>Top-down search of area under mouse for target widget</p></li>
</ol>
<blockquote>
<div><ul class="simple">
<li><p>Target widget should have a callable <em>dnd_accept</em> attribute</p></li>
<li><p>If <em>dnd_accept</em> is not present or returns <code class="docutils literal notranslate"><span class="pre">None</span></code>, search moves to parent widget</p></li>
<li><p>If no target widget is found, then the target object is <code class="docutils literal notranslate"><span class="pre">None</span></code></p></li>
</ul>
</div></blockquote>
<ol class="arabic simple" start="2">
<li><p>Call to <em>&lt;old_target&gt;.dnd_leave(source, event)</em></p></li>
<li><p>Call to <em>&lt;new_target&gt;.dnd_enter(source, event)</em></p></li>
<li><p>Call to <em>&lt;target&gt;.dnd_commit(source, event)</em> to notify of drop</p></li>
<li><p>Call to <em>&lt;source&gt;.dnd_end(target, event)</em> to signal end of drag-and-drop</p></li>
</ol>
<dl class="py class">
<dt class="sig sig-object py" id="tkinter.dnd.DndHandler">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">tkinter.dnd.</span></span><span class="sig-name descname"><span class="pre">DndHandler</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">source</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">event</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>The <em>DndHandler</em> class handles drag-and-drop events tracking Motion and
ButtonRelease events on the root of the event widget.</p>
<dl class="py method">
<dt class="sig sig-object py" id="tkinter.dnd.DndHandler.cancel">
<span class="sig-name descname"><span class="pre">cancel</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">event</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Cancel the drag-and-drop process.</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="tkinter.dnd.DndHandler.finish">
<span class="sig-name descname"><span class="pre">finish</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">event</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">commit</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Execute end of drag-and-drop functions.</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="tkinter.dnd.DndHandler.on_motion">
<span class="sig-name descname"><span class="pre">on_motion</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">event</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Inspect area below mouse for target objects while drag is performed.</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="tkinter.dnd.DndHandler.on_release">
<span class="sig-name descname"><span class="pre">on_release</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">event</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Signal end of drag when the release pattern is triggered.</p>
</dd></dl>

</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="tkinter.dnd.dnd_start">
<span class="sig-prename descclassname"><span class="pre">tkinter.dnd.</span></span><span class="sig-name descname"><span class="pre">dnd_start</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">source</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">event</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Factory function for drag-and-drop process.</p>
</dd></dl>

<div class="admonition seealso">
<p class="admonition-title">See also</p>
<p><a class="reference internal" href="tkinter.xhtml#bindings-and-events"><span class="std std-ref">Bindings and Events</span></a></p>
</div>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>