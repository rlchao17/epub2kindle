<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="curses.ascii — Utilities for ASCII characters" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/curses.ascii.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="Source code: Lib/curses/ascii.py[https://github.com/python/cpython/tree/3.13/Lib/curses/ascii.py] The curses.ascii module supplies name constants for ASCII characters and functions to test membersh..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="Source code: Lib/curses/ascii.py[https://github.com/python/cpython/tree/3.13/Lib/curses/ascii.py] The curses.ascii module supplies name constants for ASCII characters and functions to test membersh..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>curses.ascii — Utilities for ASCII characters</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    
    <link rel="canonical" href="https://docs.python.org/3/library/curses.ascii.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-curses.ascii">
<span id="curses-ascii-utilities-for-ascii-characters"></span><h1><code class="xref py py-mod docutils literal notranslate"><span class="pre">curses.ascii</span></code> — Utilities for ASCII characters</h1>
<p><strong>Source code:</strong> <a class="extlink-source reference external" href="https://github.com/python/cpython/tree/3.13/Lib/curses/ascii.py">Lib/curses/ascii.py</a><span class="link-target"> [https://github.com/python/cpython/tree/3.13/Lib/curses/ascii.py]</span></p>
<hr class="docutils" />
<p>The <a class="reference internal" href="#module-curses.ascii" title="curses.ascii: Constants and set-membership functions for ASCII characters."><code class="xref py py-mod docutils literal notranslate"><span class="pre">curses.ascii</span></code></a> module supplies name constants for ASCII characters and
functions to test membership in various ASCII character classes.  The constants
supplied are names for control characters as follows:</p>
<table class="docutils align-default">
<thead>
<tr class="row-odd"><th class="head"><p>Name</p></th>
<th class="head"><p>Meaning</p></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.NUL">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">NUL</span></span></dt>
<dd></dd></dl>

</td>
<td></td>
</tr>
<tr class="row-odd"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.SOH">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">SOH</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Start of heading, console interrupt</p></td>
</tr>
<tr class="row-even"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.STX">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">STX</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Start of text</p></td>
</tr>
<tr class="row-odd"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.ETX">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">ETX</span></span></dt>
<dd></dd></dl>

</td>
<td><p>End of text</p></td>
</tr>
<tr class="row-even"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.EOT">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">EOT</span></span></dt>
<dd></dd></dl>

</td>
<td><p>End of transmission</p></td>
</tr>
<tr class="row-odd"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.ENQ">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">ENQ</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Enquiry, goes with <a class="reference internal" href="#curses.ascii.ACK" title="curses.ascii.ACK"><code class="xref py py-const docutils literal notranslate"><span class="pre">ACK</span></code></a> flow control</p></td>
</tr>
<tr class="row-even"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.ACK">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">ACK</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Acknowledgement</p></td>
</tr>
<tr class="row-odd"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.BEL">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">BEL</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Bell</p></td>
</tr>
<tr class="row-even"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.BS">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">BS</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Backspace</p></td>
</tr>
<tr class="row-odd"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.TAB">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">TAB</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Tab</p></td>
</tr>
<tr class="row-even"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.HT">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">HT</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Alias for <a class="reference internal" href="#curses.ascii.TAB" title="curses.ascii.TAB"><code class="xref py py-const docutils literal notranslate"><span class="pre">TAB</span></code></a>: “Horizontal tab”</p></td>
</tr>
<tr class="row-odd"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.LF">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">LF</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Line feed</p></td>
</tr>
<tr class="row-even"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.NL">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">NL</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Alias for <a class="reference internal" href="#curses.ascii.LF" title="curses.ascii.LF"><code class="xref py py-const docutils literal notranslate"><span class="pre">LF</span></code></a>: “New line”</p></td>
</tr>
<tr class="row-odd"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.VT">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">VT</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Vertical tab</p></td>
</tr>
<tr class="row-even"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.FF">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">FF</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Form feed</p></td>
</tr>
<tr class="row-odd"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.CR">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">CR</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Carriage return</p></td>
</tr>
<tr class="row-even"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.SO">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">SO</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Shift-out, begin alternate character set</p></td>
</tr>
<tr class="row-odd"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.SI">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">SI</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Shift-in, resume default character set</p></td>
</tr>
<tr class="row-even"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.DLE">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">DLE</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Data-link escape</p></td>
</tr>
<tr class="row-odd"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.DC1">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">DC1</span></span></dt>
<dd></dd></dl>

</td>
<td><p>XON, for flow control</p></td>
</tr>
<tr class="row-even"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.DC2">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">DC2</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Device control 2, block-mode flow control</p></td>
</tr>
<tr class="row-odd"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.DC3">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">DC3</span></span></dt>
<dd></dd></dl>

</td>
<td><p>XOFF, for flow control</p></td>
</tr>
<tr class="row-even"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.DC4">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">DC4</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Device control 4</p></td>
</tr>
<tr class="row-odd"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.NAK">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">NAK</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Negative acknowledgement</p></td>
</tr>
<tr class="row-even"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.SYN">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">SYN</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Synchronous idle</p></td>
</tr>
<tr class="row-odd"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.ETB">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">ETB</span></span></dt>
<dd></dd></dl>

</td>
<td><p>End transmission block</p></td>
</tr>
<tr class="row-even"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.CAN">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">CAN</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Cancel</p></td>
</tr>
<tr class="row-odd"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.EM">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">EM</span></span></dt>
<dd></dd></dl>

</td>
<td><p>End of medium</p></td>
</tr>
<tr class="row-even"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.SUB">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">SUB</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Substitute</p></td>
</tr>
<tr class="row-odd"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.ESC">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">ESC</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Escape</p></td>
</tr>
<tr class="row-even"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.FS">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">FS</span></span></dt>
<dd></dd></dl>

</td>
<td><p>File separator</p></td>
</tr>
<tr class="row-odd"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.GS">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">GS</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Group separator</p></td>
</tr>
<tr class="row-even"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.RS">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">RS</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Record separator, block-mode terminator</p></td>
</tr>
<tr class="row-odd"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.US">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">US</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Unit separator</p></td>
</tr>
<tr class="row-even"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.SP">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">SP</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Space</p></td>
</tr>
<tr class="row-odd"><td><dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.DEL">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">DEL</span></span></dt>
<dd></dd></dl>

</td>
<td><p>Delete</p></td>
</tr>
</tbody>
</table>
<p>Note that many of these have little practical significance in modern usage.  The
mnemonics derive from teleprinter conventions that predate digital computers.</p>
<p>The module supplies the following functions, patterned on those in the standard
C library:</p>
<dl class="py function">
<dt class="sig sig-object py" id="curses.ascii.isalnum">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">isalnum</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">c</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Checks for an ASCII alphanumeric character; it is equivalent to <code class="docutils literal notranslate"><span class="pre">isalpha(c)</span> <span class="pre">or</span>
<span class="pre">isdigit(c)</span></code>.</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="curses.ascii.isalpha">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">isalpha</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">c</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Checks for an ASCII alphabetic character; it is equivalent to <code class="docutils literal notranslate"><span class="pre">isupper(c)</span> <span class="pre">or</span>
<span class="pre">islower(c)</span></code>.</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="curses.ascii.isascii">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">isascii</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">c</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Checks for a character value that fits in the 7-bit ASCII set.</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="curses.ascii.isblank">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">isblank</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">c</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Checks for an ASCII whitespace character; space or horizontal tab.</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="curses.ascii.iscntrl">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">iscntrl</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">c</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Checks for an ASCII control character (in the range 0x00 to 0x1f or 0x7f).</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="curses.ascii.isdigit">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">isdigit</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">c</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Checks for an ASCII decimal digit, <code class="docutils literal notranslate"><span class="pre">'0'</span></code> through <code class="docutils literal notranslate"><span class="pre">'9'</span></code>.  This is equivalent
to <code class="docutils literal notranslate"><span class="pre">c</span> <span class="pre">in</span> <span class="pre">string.digits</span></code>.</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="curses.ascii.isgraph">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">isgraph</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">c</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Checks for ASCII any printable character except space.</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="curses.ascii.islower">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">islower</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">c</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Checks for an ASCII lower-case character.</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="curses.ascii.isprint">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">isprint</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">c</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Checks for any ASCII printable character including space.</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="curses.ascii.ispunct">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">ispunct</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">c</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Checks for any printable ASCII character which is not a space or an alphanumeric
character.</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="curses.ascii.isspace">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">isspace</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">c</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Checks for ASCII white-space characters; space, line feed, carriage return, form
feed, horizontal tab, vertical tab.</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="curses.ascii.isupper">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">isupper</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">c</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Checks for an ASCII uppercase letter.</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="curses.ascii.isxdigit">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">isxdigit</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">c</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Checks for an ASCII hexadecimal digit.  This is equivalent to <code class="docutils literal notranslate"><span class="pre">c</span> <span class="pre">in</span>
<span class="pre">string.hexdigits</span></code>.</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="curses.ascii.isctrl">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">isctrl</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">c</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Checks for an ASCII control character (ordinal values 0 to 31).</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="curses.ascii.ismeta">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">ismeta</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">c</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Checks for a non-ASCII character (ordinal values 0x80 and above).</p>
</dd></dl>

<p>These functions accept either integers or single-character strings; when the argument is a
string, it is first converted using the built-in function <a class="reference internal" href="functions.xhtml#ord" title="ord"><code class="xref py py-func docutils literal notranslate"><span class="pre">ord()</span></code></a>.</p>
<p>Note that all these functions check ordinal bit values derived from the
character of the string you pass in; they do not actually know anything about
the host machine’s character encoding.</p>
<p>The following two functions take either a single-character string or integer
byte value; they return a value of the same type.</p>
<dl class="py function">
<dt class="sig sig-object py" id="curses.ascii.ascii">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">ascii</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">c</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Return the ASCII value corresponding to the low 7 bits of <em>c</em>.</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="curses.ascii.ctrl">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">ctrl</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">c</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Return the control character corresponding to the given character (the character
bit value is bitwise-anded with 0x1f).</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="curses.ascii.alt">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">alt</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">c</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Return the 8-bit character corresponding to the given ASCII character (the
character bit value is bitwise-ored with 0x80).</p>
</dd></dl>

<p>The following function takes either a single-character string or integer value;
it returns a string.</p>
<dl class="py function" id="index-0">
<dt class="sig sig-object py" id="curses.ascii.unctrl">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">unctrl</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">c</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Return a string representation of the ASCII character <em>c</em>.  If <em>c</em> is printable,
this string is the character itself.  If the character is a control character
(0x00–0x1f) the string consists of a caret (<code class="docutils literal notranslate"><span class="pre">'^'</span></code>) followed by the
corresponding uppercase letter. If the character is an ASCII delete (0x7f) the
string is <code class="docutils literal notranslate"><span class="pre">'^?'</span></code>.  If the character has its meta bit (0x80) set, the meta bit
is stripped, the preceding rules applied, and <code class="docutils literal notranslate"><span class="pre">'!'</span></code> prepended to the result.</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="curses.ascii.controlnames">
<span class="sig-prename descclassname"><span class="pre">curses.ascii.</span></span><span class="sig-name descname"><span class="pre">controlnames</span></span></dt>
<dd><p>A 33-element string array that contains the ASCII mnemonics for the thirty-two
ASCII control characters from 0 (NUL) to 0x1f (US), in order, plus the mnemonic
<code class="docutils literal notranslate"><span class="pre">SP</span></code> for the space character.</p>
</dd></dl>

</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>