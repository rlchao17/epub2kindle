<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<meta property="og:title" content="14. Interactive Input Editing and History Substitution"/>
<meta property="og:type" content="website"/>
<meta property="og:url" content="https://docs.python.org/3/tutorial/interactive.xhtml"/>
<meta property="og:site_name" content="Python documentation"/>
<meta property="og:description" content="Some versions of the Python interpreter support editing of the current input line and history substitution, similar to facilities found in the Korn shell and the GNU Bash shell. This is implemented..."/>
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png"/>
<meta property="og:image:alt" content="Python documentation"/>
<meta name="description" content="Some versions of the Python interpreter support editing of the current input line and history substitution, similar to facilities found in the Korn shell and the GNU Bash shell. This is implemented..."/>
<meta property="og:image:width" content="200"/>
<meta property="og:image:height" content="200"/>
<meta name="theme-color" content="#3776ab"/>

    <title>14. Interactive Input Editing and History Substitution</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css"/>
    <link rel="stylesheet" type="text/css" href="../_static/epub.css"/>
    
    <link rel="canonical" href="https://docs.python.org/3/tutorial/interactive.html"/>
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head>
<body>
    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="interactive-input-editing-and-history-substitution">
<span id="tut-interacting"></span><h1><span class="section-number">14. </span>Interactive Input Editing and History Substitution</h1>
<p>Some versions of the Python interpreter support editing of the current input
line and history substitution, similar to facilities found in the Korn shell and
the GNU Bash shell.  This is implemented using the <a class="reference external" href="https://tiswww.case.edu/php/chet/readline/rltop.html">GNU Readline</a><span class="link-target"> [https://tiswww.case.edu/php/chet/readline/rltop.html]</span> library,
which supports various styles of editing.  This library has its own
documentation which we won’t duplicate here.</p>
<section id="tab-completion-and-history-editing">
<span id="tut-keybindings"></span><h2 class="sigil_not_in_toc"><span class="section-number">14.1. </span>Tab Completion and History Editing</h2>
<p>Completion of variable and module names is
<a class="reference internal" href="../library/site.xhtml#rlcompleter-config"><span class="std std-ref">automatically enabled</span></a> at interpreter startup so
that the <kbd class="kbd docutils literal notranslate">Tab</kbd> key invokes the completion function; it looks at
Python statement names, the current local variables, and the available
module names.  For dotted expressions such as <code class="docutils literal notranslate"><span class="pre">string.a</span></code>, it will evaluate
the expression up to the final <code class="docutils literal notranslate"><span class="pre">'.'</span></code> and then suggest completions from
the attributes of the resulting object.  Note that this may execute
application-defined code if an object with a <a class="reference internal" href="../reference/datamodel.xhtml#object.__getattr__" title="object.__getattr__"><code class="xref py py-meth docutils literal notranslate"><span class="pre">__getattr__()</span></code></a> method
is part of the expression.  The default configuration also saves your
history into a file named <code class="file docutils literal notranslate"><span class="pre">.python_history</span></code> in your user directory.
The history will be available again during the next interactive interpreter
session.</p>
</section>
<section id="alternatives-to-the-interactive-interpreter">
<span id="tut-commentary"></span><h2 class="sigil_not_in_toc"><span class="section-number">14.2. </span>Alternatives to the Interactive Interpreter</h2>
<p>This facility is an enormous step forward compared to earlier versions of the
interpreter; however, some wishes are left: It would be nice if the proper
indentation were suggested on continuation lines (the parser knows if an indent
token is required next).  The completion mechanism might use the interpreter’s
symbol table.  A command to check (or even suggest) matching parentheses,
quotes, etc., would also be useful.</p>
<p>One alternative enhanced interactive interpreter that has been around for quite
some time is <a class="reference external" href="https://ipython.org/">IPython</a><span class="link-target"> [https://ipython.org/]</span>, which features tab completion, object exploration and
advanced history management.  It can also be thoroughly customized and embedded
into other applications.  Another similar enhanced interactive environment is
<a class="reference external" href="https://bpython-interpreter.org/">bpython</a><span class="link-target"> [https://bpython-interpreter.org/]</span>.</p>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
</body>
</html>