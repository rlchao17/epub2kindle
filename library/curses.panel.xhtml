<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<meta property="og:title" content="curses.panel — A panel stack extension for curses"/>
<meta property="og:type" content="website"/>
<meta property="og:url" content="https://docs.python.org/3/library/curses.panel.xhtml"/>
<meta property="og:site_name" content="Python documentation"/>
<meta property="og:description" content="Panels are windows with the added feature of depth, so they can be stacked on top of each other, and only the visible portions of each window will be displayed. Panels can be added, moved up or dow..."/>
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png"/>
<meta property="og:image:alt" content="Python documentation"/>
<meta name="description" content="Panels are windows with the added feature of depth, so they can be stacked on top of each other, and only the visible portions of each window will be displayed. Panels can be added, moved up or dow..."/>
<meta property="og:image:width" content="200"/>
<meta property="og:image:height" content="200"/>
<meta name="theme-color" content="#3776ab"/>

    <title>curses.panel — A panel stack extension for curses</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css"/>
    <link rel="stylesheet" type="text/css" href="../_static/epub.css"/>
    
    <link rel="canonical" href="https://docs.python.org/3/library/curses.panel.html"/>
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head>
<body>
    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-curses.panel">
<span id="curses-panel-a-panel-stack-extension-for-curses"></span><h1><code class="xref py py-mod docutils literal notranslate"><span class="pre">curses.panel</span></code> — A panel stack extension for curses</h1>
<hr class="docutils"/>
<p>Panels are windows with the added feature of depth, so they can be stacked on
top of each other, and only the visible portions of each window will be
displayed.  Panels can be added, moved up or down in the stack, and removed.</p>
<section id="functions">
<span id="cursespanel-functions"></span><h2 class="sigil_not_in_toc">Functions</h2>
<p>The module <a class="reference internal" href="#module-curses.panel" title="curses.panel: A panel stack extension that adds depth to  curses windows."><code class="xref py py-mod docutils literal notranslate"><span class="pre">curses.panel</span></code></a> defines the following functions:</p>
<dl class="py function">
<dt class="sig sig-object py" id="curses.panel.bottom_panel">
<span class="sig-prename descclassname"><span class="pre">curses.panel.</span></span><span class="sig-name descname"><span class="pre">bottom_panel</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Returns the bottom panel in the panel stack.</p>
</dd>
</dl>

<dl class="py function">
<dt class="sig sig-object py" id="curses.panel.new_panel">
<span class="sig-prename descclassname"><span class="pre">curses.panel.</span></span><span class="sig-name descname"><span class="pre">new_panel</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">win</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Returns a panel object, associating it with the given window <em>win</em>. Be aware
that you need to keep the returned panel object referenced explicitly.  If you
don’t, the panel object is garbage collected and removed from the panel stack.</p>
</dd>
</dl>

<dl class="py function">
<dt class="sig sig-object py" id="curses.panel.top_panel">
<span class="sig-prename descclassname"><span class="pre">curses.panel.</span></span><span class="sig-name descname"><span class="pre">top_panel</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Returns the top panel in the panel stack.</p>
</dd>
</dl>

<dl class="py function">
<dt class="sig sig-object py" id="curses.panel.update_panels">
<span class="sig-prename descclassname"><span class="pre">curses.panel.</span></span><span class="sig-name descname"><span class="pre">update_panels</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Updates the virtual screen after changes in the panel stack. This does not call
<a class="reference internal" href="curses.xhtml#curses.doupdate" title="curses.doupdate"><code class="xref py py-func docutils literal notranslate"><span class="pre">curses.doupdate()</span></code></a>, so you’ll have to do this yourself.</p>
</dd>
</dl>

</section>
<section id="panel-objects">
<span id="curses-panel-objects"></span><h2 class="sigil_not_in_toc">Panel Objects</h2>
<p>Panel objects, as returned by <a class="reference internal" href="#curses.panel.new_panel" title="curses.panel.new_panel"><code class="xref py py-func docutils literal notranslate"><span class="pre">new_panel()</span></code></a> above, are windows with a
stacking order. There’s always a window associated with a panel which determines
the content, while the panel methods are responsible for the window’s depth in
the panel stack.</p>
<p>Panel objects have the following methods:</p>
<dl class="py method">
<dt class="sig sig-object py" id="curses.panel.Panel.above">
<span class="sig-prename descclassname"><span class="pre">Panel.</span></span><span class="sig-name descname"><span class="pre">above</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Returns the panel above the current panel.</p>
</dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="curses.panel.Panel.below">
<span class="sig-prename descclassname"><span class="pre">Panel.</span></span><span class="sig-name descname"><span class="pre">below</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Returns the panel below the current panel.</p>
</dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="curses.panel.Panel.bottom">
<span class="sig-prename descclassname"><span class="pre">Panel.</span></span><span class="sig-name descname"><span class="pre">bottom</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Push the panel to the bottom of the stack.</p>
</dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="curses.panel.Panel.hidden">
<span class="sig-prename descclassname"><span class="pre">Panel.</span></span><span class="sig-name descname"><span class="pre">hidden</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Returns <code class="docutils literal notranslate"><span class="pre">True</span></code> if the panel is hidden (not visible), <code class="docutils literal notranslate"><span class="pre">False</span></code> otherwise.</p>
</dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="curses.panel.Panel.hide">
<span class="sig-prename descclassname"><span class="pre">Panel.</span></span><span class="sig-name descname"><span class="pre">hide</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Hide the panel. This does not delete the object, it just makes the window on
screen invisible.</p>
</dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="curses.panel.Panel.move">
<span class="sig-prename descclassname"><span class="pre">Panel.</span></span><span class="sig-name descname"><span class="pre">move</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">y</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">x</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Move the panel to the screen coordinates <code class="docutils literal notranslate"><span class="pre">(y,</span> <span class="pre">x)</span></code>.</p>
</dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="curses.panel.Panel.replace">
<span class="sig-prename descclassname"><span class="pre">Panel.</span></span><span class="sig-name descname"><span class="pre">replace</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">win</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Change the window associated with the panel to the window <em>win</em>.</p>
</dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="curses.panel.Panel.set_userptr">
<span class="sig-prename descclassname"><span class="pre">Panel.</span></span><span class="sig-name descname"><span class="pre">set_userptr</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">obj</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Set the panel’s user pointer to <em>obj</em>. This is used to associate an arbitrary
piece of data with the panel, and can be any Python object.</p>
</dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="curses.panel.Panel.show">
<span class="sig-prename descclassname"><span class="pre">Panel.</span></span><span class="sig-name descname"><span class="pre">show</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Display the panel (which might have been hidden).</p>
</dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="curses.panel.Panel.top">
<span class="sig-prename descclassname"><span class="pre">Panel.</span></span><span class="sig-name descname"><span class="pre">top</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Push panel to the top of the stack.</p>
</dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="curses.panel.Panel.userptr">
<span class="sig-prename descclassname"><span class="pre">Panel.</span></span><span class="sig-name descname"><span class="pre">userptr</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Returns the user pointer for the panel.  This might be any Python object.</p>
</dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="curses.panel.Panel.window">
<span class="sig-prename descclassname"><span class="pre">Panel.</span></span><span class="sig-name descname"><span class="pre">window</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Returns the window object associated with the panel.</p>
</dd>
</dl>

</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
</body>
</html>