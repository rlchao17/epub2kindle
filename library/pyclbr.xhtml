<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<meta property="og:title" content="pyclbr — Python module browser support"/>
<meta property="og:type" content="website"/>
<meta property="og:url" content="https://docs.python.org/3/library/pyclbr.xhtml"/>
<meta property="og:site_name" content="Python documentation"/>
<meta property="og:description" content="Source code: Lib/pyclbr.py[https://github.com/python/cpython/tree/3.13/Lib/pyclbr.py] The pyclbr module provides limited information about the functions, classes, and methods defined in a Python-co..."/>
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png"/>
<meta property="og:image:alt" content="Python documentation"/>
<meta name="description" content="Source code: Lib/pyclbr.py[https://github.com/python/cpython/tree/3.13/Lib/pyclbr.py] The pyclbr module provides limited information about the functions, classes, and methods defined in a Python-co..."/>
<meta property="og:image:width" content="200"/>
<meta property="og:image:height" content="200"/>
<meta name="theme-color" content="#3776ab"/>

    <title>pyclbr — Python module browser support</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css"/>
    <link rel="stylesheet" type="text/css" href="../_static/epub.css"/>
    
    <link rel="canonical" href="https://docs.python.org/3/library/pyclbr.html"/>
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head>
<body>
    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-pyclbr">
<span id="pyclbr-python-module-browser-support"></span><h1><code class="xref py py-mod docutils literal notranslate"><span class="pre">pyclbr</span></code> — Python module browser support</h1>
<p><strong>Source code:</strong> <a class="extlink-source reference external" href="https://github.com/python/cpython/tree/3.13/Lib/pyclbr.py">Lib/pyclbr.py</a><span class="link-target"> [https://github.com/python/cpython/tree/3.13/Lib/pyclbr.py]</span></p>
<hr class="docutils"/>
<p>The <a class="reference internal" href="#module-pyclbr" title="pyclbr: Supports information extraction for a Python module browser."><code class="xref py py-mod docutils literal notranslate"><span class="pre">pyclbr</span></code></a> module provides limited information about the
functions, classes, and methods defined in a Python-coded module.  The
information is sufficient to implement a module browser.  The
information is extracted from the Python source code rather than by
importing the module, so this module is safe to use with untrusted code.
This restriction makes it impossible to use this module with modules not
implemented in Python, including all standard and optional extension
modules.</p>
<dl class="py function">
<dt class="sig sig-object py" id="pyclbr.readmodule">
<span class="sig-prename descclassname"><span class="pre">pyclbr.</span></span><span class="sig-name descname"><span class="pre">readmodule</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">module</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">path</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Return a dictionary mapping module-level class names to class
descriptors.  If possible, descriptors for imported base classes are
included.  Parameter <em>module</em> is a string with the name of the module
to read; it may be the name of a module within a package.  If given,
<em>path</em> is a sequence of directory paths prepended to <code class="docutils literal notranslate"><span class="pre">sys.path</span></code>,
which is used to locate the module source code.</p>
<p>This function is the original interface and is only kept for back
compatibility.  It returns a filtered version of the following.</p>
</dd>
</dl>

<dl class="py function">
<dt class="sig sig-object py" id="pyclbr.readmodule_ex">
<span class="sig-prename descclassname"><span class="pre">pyclbr.</span></span><span class="sig-name descname"><span class="pre">readmodule_ex</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">module</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">path</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Return a dictionary-based tree containing a function or class
descriptors for each function and class defined in the module with a
<code class="docutils literal notranslate"><span class="pre">def</span></code> or <code class="docutils literal notranslate"><span class="pre">class</span></code> statement.  The returned dictionary maps
module-level function and class names to their descriptors.  Nested
objects are entered into the children dictionary of their parent.  As
with readmodule, <em>module</em> names the module to be read and <em>path</em> is
prepended to sys.path.  If the module being read is a package, the
returned dictionary has a key <code class="docutils literal notranslate"><span class="pre">'__path__'</span></code> whose value is a list
containing the package search path.</p>
</dd>
</dl>

<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.7: </span>Descriptors for nested definitions.  They are accessed through the
new children attribute.  Each has a new parent attribute.</p>
</div>
<p>The descriptors returned by these functions are instances of
Function and Class classes.  Users are not expected to create instances
of these classes.</p>
<section id="function-objects">
<span id="pyclbr-function-objects"></span><h2 class="sigil_not_in_toc">Function Objects</h2>
<dl class="py class">
<dt class="sig sig-object py" id="pyclbr.Function">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">pyclbr.</span></span><span class="sig-name descname"><span class="pre">Function</span></span></dt>
<dd><p>Class <code class="xref py py-class docutils literal notranslate"><span class="pre">Function</span></code> instances describe functions defined by def
statements.  They have the following attributes:</p>
<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Function.file">
<span class="sig-name descname"><span class="pre">file</span></span></dt>
<dd><p>Name of the file in which the function is defined.</p>
</dd>
</dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Function.module">
<span class="sig-name descname"><span class="pre">module</span></span></dt>
<dd><p>The name of the module defining the function described.</p>
</dd>
</dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Function.name">
<span class="sig-name descname"><span class="pre">name</span></span></dt>
<dd><p>The name of the function.</p>
</dd>
</dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Function.lineno">
<span class="sig-name descname"><span class="pre">lineno</span></span></dt>
<dd><p>The line number in the file where the definition starts.</p>
</dd>
</dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Function.parent">
<span class="sig-name descname"><span class="pre">parent</span></span></dt>
<dd><p>For top-level functions, <code class="docutils literal notranslate"><span class="pre">None</span></code>.  For nested functions, the parent.</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.7.</span></p>
</div>
</dd>
</dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Function.children">
<span class="sig-name descname"><span class="pre">children</span></span></dt>
<dd><p>A <a class="reference internal" href="stdtypes.xhtml#dict" title="dict"><code class="xref py py-class docutils literal notranslate"><span class="pre">dictionary</span></code></a> mapping names to descriptors for nested functions and
classes.</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.7.</span></p>
</div>
</dd>
</dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Function.is_async">
<span class="sig-name descname"><span class="pre">is_async</span></span></dt>
<dd><p><code class="docutils literal notranslate"><span class="pre">True</span></code> for functions that are defined with the
<a class="reference internal" href="../reference/compound_stmts.xhtml#async-def"><code class="xref std std-keyword docutils literal notranslate"><span class="pre">async</span></code></a> prefix, <code class="docutils literal notranslate"><span class="pre">False</span></code> otherwise.</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.10.</span></p>
</div>
</dd>
</dl>

</dd>
</dl>

</section>
<section id="class-objects">
<span id="pyclbr-class-objects"></span><h2 class="sigil_not_in_toc">Class Objects</h2>
<dl class="py class">
<dt class="sig sig-object py" id="pyclbr.Class">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">pyclbr.</span></span><span class="sig-name descname"><span class="pre">Class</span></span></dt>
<dd><p>Class <code class="xref py py-class docutils literal notranslate"><span class="pre">Class</span></code> instances describe classes defined by class
statements.  They have the same attributes as <a class="reference internal" href="#pyclbr.Function" title="pyclbr.Function"><code class="xref py py-class docutils literal notranslate"><span class="pre">Functions</span></code></a>
and two more.</p>
<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Class.file">
<span class="sig-name descname"><span class="pre">file</span></span></dt>
<dd><p>Name of the file in which the class is defined.</p>
</dd>
</dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Class.module">
<span class="sig-name descname"><span class="pre">module</span></span></dt>
<dd><p>The name of the module defining the class described.</p>
</dd>
</dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Class.name">
<span class="sig-name descname"><span class="pre">name</span></span></dt>
<dd><p>The name of the class.</p>
</dd>
</dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Class.lineno">
<span class="sig-name descname"><span class="pre">lineno</span></span></dt>
<dd><p>The line number in the file where the definition starts.</p>
</dd>
</dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Class.parent">
<span class="sig-name descname"><span class="pre">parent</span></span></dt>
<dd><p>For top-level classes, <code class="docutils literal notranslate"><span class="pre">None</span></code>.  For nested classes, the parent.</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.7.</span></p>
</div>
</dd>
</dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Class.children">
<span class="sig-name descname"><span class="pre">children</span></span></dt>
<dd><p>A dictionary mapping names to descriptors for nested functions and
classes.</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.7.</span></p>
</div>
</dd>
</dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Class.super">
<span class="sig-name descname"><span class="pre">super</span></span></dt>
<dd><p>A list of <code class="xref py py-class docutils literal notranslate"><span class="pre">Class</span></code> objects which describe the immediate base
classes of the class being described.  Classes which are named as
superclasses but which are not discoverable by <a class="reference internal" href="#pyclbr.readmodule_ex" title="pyclbr.readmodule_ex"><code class="xref py py-func docutils literal notranslate"><span class="pre">readmodule_ex()</span></code></a>
are listed as a string with the class name instead of as
<code class="xref py py-class docutils literal notranslate"><span class="pre">Class</span></code> objects.</p>
</dd>
</dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Class.methods">
<span class="sig-name descname"><span class="pre">methods</span></span></dt>
<dd><p>A <a class="reference internal" href="stdtypes.xhtml#dict" title="dict"><code class="xref py py-class docutils literal notranslate"><span class="pre">dictionary</span></code></a> mapping method names to line numbers.
This can be derived from the newer <a class="reference internal" href="#pyclbr.Class.children" title="pyclbr.Class.children"><code class="xref py py-attr docutils literal notranslate"><span class="pre">children</span></code></a> dictionary,
but remains for
back-compatibility.</p>
</dd>
</dl>

</dd>
</dl>

</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
</body>
</html>