<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<meta property="og:title" content="Built-in Constants"/>
<meta property="og:type" content="website"/>
<meta property="og:url" content="https://docs.python.org/3/library/constants.xhtml"/>
<meta property="og:site_name" content="Python documentation"/>
<meta property="og:description" content="A small number of constants live in the built-in namespace. They are: Constants added by the site module: The site module (which is imported automatically during startup, except if the-S command-li..."/>
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png"/>
<meta property="og:image:alt" content="Python documentation"/>
<meta name="description" content="A small number of constants live in the built-in namespace. They are: Constants added by the site module: The site module (which is imported automatically during startup, except if the-S command-li..."/>
<meta property="og:image:width" content="200"/>
<meta property="og:image:height" content="200"/>
<meta name="theme-color" content="#3776ab"/>

    <title>Built-in Constants</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css"/>
    <link rel="stylesheet" type="text/css" href="../_static/epub.css"/>
    
    <link rel="canonical" href="https://docs.python.org/3/library/constants.html"/>
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head>
<body>
    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="built-in-constants">
<span id="built-in-consts"></span><h1>Built-in Constants</h1>
<p>A small number of constants live in the built-in namespace.  They are:</p>
<dl class="py data">
<dt class="sig sig-object py" id="False">
<span class="sig-name descname"><span class="pre">False</span></span></dt>
<dd><p>The false value of the <a class="reference internal" href="functions.xhtml#bool" title="bool"><code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code></a> type. Assignments to <code class="docutils literal notranslate"><span class="pre">False</span></code>
are illegal and raise a <a class="reference internal" href="exceptions.xhtml#SyntaxError" title="SyntaxError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">SyntaxError</span></code></a>.</p>
</dd>
</dl>

<dl class="py data">
<dt class="sig sig-object py" id="True">
<span class="sig-name descname"><span class="pre">True</span></span></dt>
<dd><p>The true value of the <a class="reference internal" href="functions.xhtml#bool" title="bool"><code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code></a> type. Assignments to <code class="docutils literal notranslate"><span class="pre">True</span></code>
are illegal and raise a <a class="reference internal" href="exceptions.xhtml#SyntaxError" title="SyntaxError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">SyntaxError</span></code></a>.</p>
</dd>
</dl>

<dl class="py data">
<dt class="sig sig-object py" id="None">
<span class="sig-name descname"><span class="pre">None</span></span></dt>
<dd><p>An object frequently used to represent the absence of a value, as when
default arguments are not passed to a function. Assignments to <code class="docutils literal notranslate"><span class="pre">None</span></code>
are illegal and raise a <a class="reference internal" href="exceptions.xhtml#SyntaxError" title="SyntaxError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">SyntaxError</span></code></a>.
<code class="docutils literal notranslate"><span class="pre">None</span></code> is the sole instance of the <a class="reference internal" href="types.xhtml#types.NoneType" title="types.NoneType"><code class="xref py py-data docutils literal notranslate"><span class="pre">NoneType</span></code></a> type.</p>
</dd>
</dl>

<dl class="py data">
<dt class="sig sig-object py" id="NotImplemented">
<span class="sig-name descname"><span class="pre">NotImplemented</span></span></dt>
<dd><p>A special value which should be returned by the binary special methods
(e.g. <a class="reference internal" href="../reference/datamodel.xhtml#object.__eq__" title="object.__eq__"><code class="xref py py-meth docutils literal notranslate"><span class="pre">__eq__()</span></code></a>, <a class="reference internal" href="../reference/datamodel.xhtml#object.__lt__" title="object.__lt__"><code class="xref py py-meth docutils literal notranslate"><span class="pre">__lt__()</span></code></a>, <a class="reference internal" href="../reference/datamodel.xhtml#object.__add__" title="object.__add__"><code class="xref py py-meth docutils literal notranslate"><span class="pre">__add__()</span></code></a>, <a class="reference internal" href="../reference/datamodel.xhtml#object.__rsub__" title="object.__rsub__"><code class="xref py py-meth docutils literal notranslate"><span class="pre">__rsub__()</span></code></a>,
etc.) to indicate that the operation is not implemented with respect to
the other type; may be returned by the in-place binary special methods
(e.g. <a class="reference internal" href="../reference/datamodel.xhtml#object.__imul__" title="object.__imul__"><code class="xref py py-meth docutils literal notranslate"><span class="pre">__imul__()</span></code></a>, <a class="reference internal" href="../reference/datamodel.xhtml#object.__iand__" title="object.__iand__"><code class="xref py py-meth docutils literal notranslate"><span class="pre">__iand__()</span></code></a>, etc.) for the same purpose.
It should not be evaluated in a boolean context.
<code class="xref py py-data docutils literal notranslate"><span class="pre">NotImplemented</span></code> is the sole instance of the <a class="reference internal" href="types.xhtml#types.NotImplementedType" title="types.NotImplementedType"><code class="xref py py-data docutils literal notranslate"><span class="pre">types.NotImplementedType</span></code></a> type.</p>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>When a binary (or in-place) method returns <code class="xref py py-data docutils literal notranslate"><span class="pre">NotImplemented</span></code> the
interpreter will try the reflected operation on the other type (or some
other fallback, depending on the operator).  If all attempts return
<code class="xref py py-data docutils literal notranslate"><span class="pre">NotImplemented</span></code>, the interpreter will raise an appropriate exception.
Incorrectly returning <code class="xref py py-data docutils literal notranslate"><span class="pre">NotImplemented</span></code> will result in a misleading
error message or the <code class="xref py py-data docutils literal notranslate"><span class="pre">NotImplemented</span></code> value being returned to Python code.</p>
<p>See <a class="reference internal" href="numbers.xhtml#implementing-the-arithmetic-operations"><span class="std std-ref">Implementing the arithmetic operations</span></a> for examples.</p>
</div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p><code class="docutils literal notranslate"><span class="pre">NotImplementedError</span></code> and <code class="xref py py-data docutils literal notranslate"><span class="pre">NotImplemented</span></code> are not interchangeable,
even though they have similar names and purposes.
See <a class="reference internal" href="exceptions.xhtml#NotImplementedError" title="NotImplementedError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">NotImplementedError</span></code></a> for details on when to use it.</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified changed">Changed in version 3.9: </span>Evaluating <code class="xref py py-data docutils literal notranslate"><span class="pre">NotImplemented</span></code> in a boolean context is deprecated. While
it currently evaluates as true, it will emit a <a class="reference internal" href="exceptions.xhtml#DeprecationWarning" title="DeprecationWarning"><code class="xref py py-exc docutils literal notranslate"><span class="pre">DeprecationWarning</span></code></a>.
It will raise a <a class="reference internal" href="exceptions.xhtml#TypeError" title="TypeError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">TypeError</span></code></a> in a future version of Python.</p>
</div>
</dd>
</dl>

<dl class="py data" id="index-0">
<dt class="sig sig-object py" id="Ellipsis">
<span class="sig-name descname"><span class="pre">Ellipsis</span></span></dt>
<dd><p>The same as the ellipsis literal “<code class="docutils literal notranslate"><span class="pre">...</span></code>”. Special value used mostly in conjunction
with extended slicing syntax for user-defined container data types.
<code class="docutils literal notranslate"><span class="pre">Ellipsis</span></code> is the sole instance of the <a class="reference internal" href="types.xhtml#types.EllipsisType" title="types.EllipsisType"><code class="xref py py-data docutils literal notranslate"><span class="pre">types.EllipsisType</span></code></a> type.</p>
</dd>
</dl>

<dl class="py data">
<dt class="sig sig-object py" id="debug__">
<span class="sig-name descname"><span class="pre">__debug__</span></span></dt>
<dd><p>This constant is true if Python was not started with an <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-O"><code class="xref std std-option docutils literal notranslate"><span class="pre">-O</span></code></a> option.
See also the <a class="reference internal" href="../reference/simple_stmts.xhtml#assert"><code class="xref std std-keyword docutils literal notranslate"><span class="pre">assert</span></code></a> statement.</p>
</dd>
</dl>

<div class="admonition note">
<p class="admonition-title">Note</p>
<p>The names <a class="reference internal" href="#None" title="None"><code class="xref py py-data docutils literal notranslate"><span class="pre">None</span></code></a>, <a class="reference internal" href="#False" title="False"><code class="xref py py-data docutils literal notranslate"><span class="pre">False</span></code></a>, <a class="reference internal" href="#True" title="True"><code class="xref py py-data docutils literal notranslate"><span class="pre">True</span></code></a> and <a class="reference internal" href="#debug__" title="__debug__"><code class="xref py py-data docutils literal notranslate"><span class="pre">__debug__</span></code></a>
cannot be reassigned (assignments to them, even as an attribute name, raise
<a class="reference internal" href="exceptions.xhtml#SyntaxError" title="SyntaxError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">SyntaxError</span></code></a>), so they can be considered “true” constants.</p>
</div>
<section id="constants-added-by-the-site-module">
<span id="site-consts"></span><h2 class="sigil_not_in_toc">Constants added by the <a class="reference internal" href="site.xhtml#module-site" title="site: Module responsible for site-specific configuration."><code class="xref py py-mod docutils literal notranslate"><span class="pre">site</span></code></a> module</h2>
<p>The <a class="reference internal" href="site.xhtml#module-site" title="site: Module responsible for site-specific configuration."><code class="xref py py-mod docutils literal notranslate"><span class="pre">site</span></code></a> module (which is imported automatically during startup, except
if the <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-S"><code class="xref std std-option docutils literal notranslate"><span class="pre">-S</span></code></a> command-line option is given) adds several constants to the
built-in namespace.  They are useful for the interactive interpreter shell and
should not be used in programs.</p>
<dl class="py data">
<dt class="sig sig-object py" id="quit">
<span class="sig-name descname"><span class="pre">quit</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">code</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>
<dt class="sig sig-object py" id="exit">
<span class="sig-name descname"><span class="pre">exit</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">code</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Objects that when printed, print a message like “Use quit() or Ctrl-D
(i.e. EOF) to exit”, and when called, raise <a class="reference internal" href="exceptions.xhtml#SystemExit" title="SystemExit"><code class="xref py py-exc docutils literal notranslate"><span class="pre">SystemExit</span></code></a> with the
specified exit code.</p>
</dd>
</dl>

<dl class="py data">
<dt class="sig sig-object py">
<span class="sig-name descname"><span class="pre">help</span></span></dt>
<dd><p>Object that when printed, prints the message “Type help() for interactive
help, or help(object) for help about object.”, and when called,
acts as described <a class="reference internal" href="functions.xhtml#help" title="help"><code class="xref py py-func docutils literal notranslate"><span class="pre">elsewhere</span></code></a>.</p>
</dd>
</dl>

<dl class="py data">
<dt class="sig sig-object py" id="copyright">
<span class="sig-name descname"><span class="pre">copyright</span></span></dt>
<dt class="sig sig-object py" id="credits">
<span class="sig-name descname"><span class="pre">credits</span></span></dt>
<dd><p>Objects that when printed or called, print the text of copyright or
credits, respectively.</p>
</dd>
</dl>

<dl class="py data">
<dt class="sig sig-object py" id="license">
<span class="sig-name descname"><span class="pre">license</span></span></dt>
<dd><p>Object that when printed, prints the message “Type license() to see the
full license text”, and when called, displays the full license text in a
pager-like fashion (one screen at a time).</p>
</dd>
</dl>

</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
</body>
</html>