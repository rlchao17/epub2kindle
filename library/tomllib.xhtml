<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="tomllib — Parse TOML files" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/tomllib.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="Source code: Lib/tomllib[https://github.com/python/cpython/tree/3.13/Lib/tomllib] This module provides an interface for parsing TOML 1.0.0 (Tom’s Obvious Minimal Language, https://toml.io[https://t..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="Source code: Lib/tomllib[https://github.com/python/cpython/tree/3.13/Lib/tomllib] This module provides an interface for parsing TOML 1.0.0 (Tom’s Obvious Minimal Language, https://toml.io[https://t..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>tomllib — Parse TOML files</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    
    <link rel="canonical" href="https://docs.python.org/3/library/tomllib.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-tomllib">
<span id="tomllib-parse-toml-files"></span><h1><code class="xref py py-mod docutils literal notranslate"><span class="pre">tomllib</span></code> — Parse TOML files</h1>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.11.</span></p>
</div>
<p><strong>Source code:</strong> <a class="extlink-source reference external" href="https://github.com/python/cpython/tree/3.13/Lib/tomllib">Lib/tomllib</a><span class="link-target"> [https://github.com/python/cpython/tree/3.13/Lib/tomllib]</span></p>
<hr class="docutils" />
<p>This module provides an interface for parsing TOML 1.0.0 (Tom’s Obvious Minimal
Language, <a class="reference external" href="https://toml.io/en/">https://toml.io</a><span class="link-target"> [https://toml.io/en/]</span>). This module does not
support writing TOML.</p>
<div class="admonition seealso">
<p class="admonition-title">See also</p>
<p>The <a class="extlink-pypi reference external" href="https://pypi.org/project/tomli-w/">Tomli-W package</a><span class="link-target"> [https://pypi.org/project/tomli-w/]</span>
is a TOML writer that can be used in conjunction with this module,
providing a write API familiar to users of the standard library
<a class="reference internal" href="marshal.xhtml#module-marshal" title="marshal: Convert Python objects to streams of bytes and back (with different constraints)."><code class="xref py py-mod docutils literal notranslate"><span class="pre">marshal</span></code></a> and <a class="reference internal" href="pickle.xhtml#module-pickle" title="pickle: Convert Python objects to streams of bytes and back."><code class="xref py py-mod docutils literal notranslate"><span class="pre">pickle</span></code></a> modules.</p>
</div>
<div class="admonition seealso">
<p class="admonition-title">See also</p>
<p>The <a class="extlink-pypi reference external" href="https://pypi.org/project/tomlkit/">TOML Kit package</a><span class="link-target"> [https://pypi.org/project/tomlkit/]</span>
is a style-preserving TOML library with both read and write capability.
It is a recommended replacement for this module for editing already
existing TOML files.</p>
</div>
<p>This module defines the following functions:</p>
<dl class="py function">
<dt class="sig sig-object py" id="tomllib.load">
<span class="sig-prename descclassname"><span class="pre">tomllib.</span></span><span class="sig-name descname"><span class="pre">load</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">fp</span></span></em>, <em class="sig-param"><span class="o"><span class="pre">/</span></span></em>, <em class="sig-param"><span class="o"><span class="pre">*</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">parse_float</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">float</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Read a TOML file. The first argument should be a readable and binary file object.
Return a <a class="reference internal" href="stdtypes.xhtml#dict" title="dict"><code class="xref py py-class docutils literal notranslate"><span class="pre">dict</span></code></a>. Convert TOML types to Python using this
<a class="reference internal" href="#toml-to-py-table"><span class="std std-ref">conversion table</span></a>.</p>
<p><em>parse_float</em> will be called with the string of every TOML
float to be decoded.  By default, this is equivalent to <code class="docutils literal notranslate"><span class="pre">float(num_str)</span></code>.
This can be used to use another datatype or parser for TOML floats
(e.g. <a class="reference internal" href="decimal.xhtml#decimal.Decimal" title="decimal.Decimal"><code class="xref py py-class docutils literal notranslate"><span class="pre">decimal.Decimal</span></code></a>). The callable must not return a
<a class="reference internal" href="stdtypes.xhtml#dict" title="dict"><code class="xref py py-class docutils literal notranslate"><span class="pre">dict</span></code></a> or a <a class="reference internal" href="stdtypes.xhtml#list" title="list"><code class="xref py py-class docutils literal notranslate"><span class="pre">list</span></code></a>, else a <a class="reference internal" href="exceptions.xhtml#ValueError" title="ValueError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">ValueError</span></code></a> is raised.</p>
<p>A <a class="reference internal" href="#tomllib.TOMLDecodeError" title="tomllib.TOMLDecodeError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">TOMLDecodeError</span></code></a> will be raised on an invalid TOML document.</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="tomllib.loads">
<span class="sig-prename descclassname"><span class="pre">tomllib.</span></span><span class="sig-name descname"><span class="pre">loads</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">s</span></span></em>, <em class="sig-param"><span class="o"><span class="pre">/</span></span></em>, <em class="sig-param"><span class="o"><span class="pre">*</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">parse_float</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">float</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Load TOML from a <a class="reference internal" href="stdtypes.xhtml#str" title="str"><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></a> object. Return a <a class="reference internal" href="stdtypes.xhtml#dict" title="dict"><code class="xref py py-class docutils literal notranslate"><span class="pre">dict</span></code></a>. Convert TOML
types to Python using this <a class="reference internal" href="#toml-to-py-table"><span class="std std-ref">conversion table</span></a>. The
<em>parse_float</em> argument has the same meaning as in <a class="reference internal" href="#tomllib.load" title="tomllib.load"><code class="xref py py-func docutils literal notranslate"><span class="pre">load()</span></code></a>.</p>
<p>A <a class="reference internal" href="#tomllib.TOMLDecodeError" title="tomllib.TOMLDecodeError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">TOMLDecodeError</span></code></a> will be raised on an invalid TOML document.</p>
</dd></dl>

<p>The following exceptions are available:</p>
<dl class="py exception">
<dt class="sig sig-object py" id="tomllib.TOMLDecodeError">
<em class="property"><span class="pre">exception</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">tomllib.</span></span><span class="sig-name descname"><span class="pre">TOMLDecodeError</span></span></dt>
<dd><p>Subclass of <a class="reference internal" href="exceptions.xhtml#ValueError" title="ValueError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">ValueError</span></code></a>.</p>
</dd></dl>

<section id="examples">
<h2>Examples</h2>
<p>Parsing a TOML file:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="kn">import</span><span class="w"> </span><span class="nn">tomllib</span>

<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&quot;pyproject.toml&quot;</span><span class="p">,</span> <span class="s2">&quot;rb&quot;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
    <span class="n">data</span> <span class="o">=</span> <span class="n">tomllib</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
</pre></div>
</div>
<p>Parsing a TOML string:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="kn">import</span><span class="w"> </span><span class="nn">tomllib</span>

<span class="n">toml_str</span> <span class="o">=</span> <span class="s2">&quot;&quot;&quot;</span>
<span class="s2">python-version = &quot;3.11.0&quot;</span>
<span class="s2">python-implementation = &quot;CPython&quot;</span>
<span class="s2">&quot;&quot;&quot;</span>

<span class="n">data</span> <span class="o">=</span> <span class="n">tomllib</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span><span class="n">toml_str</span><span class="p">)</span>
</pre></div>
</div>
</section>
<section id="conversion-table">
<h2>Conversion Table</h2>
<table class="docutils align-default" id="toml-to-py-table">
<thead>
<tr class="row-odd"><th class="head"><p>TOML</p></th>
<th class="head"><p>Python</p></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><p>TOML document</p></td>
<td><p>dict</p></td>
</tr>
<tr class="row-odd"><td><p>string</p></td>
<td><p>str</p></td>
</tr>
<tr class="row-even"><td><p>integer</p></td>
<td><p>int</p></td>
</tr>
<tr class="row-odd"><td><p>float</p></td>
<td><p>float (configurable with <em>parse_float</em>)</p></td>
</tr>
<tr class="row-even"><td><p>boolean</p></td>
<td><p>bool</p></td>
</tr>
<tr class="row-odd"><td><p>offset date-time</p></td>
<td><p>datetime.datetime (<code class="docutils literal notranslate"><span class="pre">tzinfo</span></code> attribute set to an instance of <code class="docutils literal notranslate"><span class="pre">datetime.timezone</span></code>)</p></td>
</tr>
<tr class="row-even"><td><p>local date-time</p></td>
<td><p>datetime.datetime (<code class="docutils literal notranslate"><span class="pre">tzinfo</span></code> attribute set to <code class="docutils literal notranslate"><span class="pre">None</span></code>)</p></td>
</tr>
<tr class="row-odd"><td><p>local date</p></td>
<td><p>datetime.date</p></td>
</tr>
<tr class="row-even"><td><p>local time</p></td>
<td><p>datetime.time</p></td>
</tr>
<tr class="row-odd"><td><p>array</p></td>
<td><p>list</p></td>
</tr>
<tr class="row-even"><td><p>table</p></td>
<td><p>dict</p></td>
</tr>
<tr class="row-odd"><td><p>inline table</p></td>
<td><p>dict</p></td>
</tr>
<tr class="row-even"><td><p>array of tables</p></td>
<td><p>list of dicts</p></td>
</tr>
</tbody>
</table>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>