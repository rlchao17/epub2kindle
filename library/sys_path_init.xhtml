<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<meta property="og:title" content="The initialization of the sys.path module search path"/>
<meta property="og:type" content="website"/>
<meta property="og:url" content="https://docs.python.org/3/library/sys_path_init.xhtml"/>
<meta property="og:site_name" content="Python documentation"/>
<meta property="og:description" content="A module search path is initialized when Python starts. This module search path may be accessed at sys.path. The first entry in the module search path is the directory that contains the input scrip..."/>
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png"/>
<meta property="og:image:alt" content="Python documentation"/>
<meta name="description" content="A module search path is initialized when Python starts. This module search path may be accessed at sys.path. The first entry in the module search path is the directory that contains the input scrip..."/>
<meta property="og:image:width" content="200"/>
<meta property="og:image:height" content="200"/>
<meta name="theme-color" content="#3776ab"/>

    <title>The initialization of the sys.path module search path</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css"/>
    <link rel="stylesheet" type="text/css" href="../_static/epub.css"/>
    
    <link rel="canonical" href="https://docs.python.org/3/library/sys_path_init.html"/>
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head>
<body>
    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="the-initialization-of-the-sys-path-module-search-path">
<span id="sys-path-init"></span><h1>The initialization of the <a class="reference internal" href="sys.xhtml#sys.path" title="sys.path"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.path</span></code></a> module search path</h1>
<p>A module search path is initialized when Python starts. This module search path
may be accessed at <a class="reference internal" href="sys.xhtml#sys.path" title="sys.path"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.path</span></code></a>.</p>
<p>The first entry in the module search path is the directory that contains the
input script, if there is one. Otherwise, the first entry is the current
directory, which is the case when executing the interactive shell, a <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-c"><code class="xref std std-option docutils literal notranslate"><span class="pre">-c</span></code></a>
command, or <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-m"><code class="xref std std-option docutils literal notranslate"><span class="pre">-m</span></code></a> module.</p>
<p>The <span class="target" id="index-0"></span><a class="reference internal" href="../using/cmdline.xhtml#envvar-PYTHONPATH"><code class="xref std std-envvar docutils literal notranslate"><span class="pre">PYTHONPATH</span></code></a> environment variable is often used to add directories
to the search path. If this environment variable is found then the contents are
added to the module search path.</p>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p><span class="target" id="index-1"></span><a class="reference internal" href="../using/cmdline.xhtml#envvar-PYTHONPATH"><code class="xref std std-envvar docutils literal notranslate"><span class="pre">PYTHONPATH</span></code></a> will affect all installed Python versions/environments.
Be wary of setting this in your shell profile or global environment variables.
The <a class="reference internal" href="site.xhtml#module-site" title="site: Module responsible for site-specific configuration."><code class="xref py py-mod docutils literal notranslate"><span class="pre">site</span></code></a> module offers more nuanced techniques as mentioned below.</p>
</div>
<p>The next items added are the directories containing standard Python modules as
well as any <a class="reference internal" href="../glossary.xhtml#term-extension-module"><span class="xref std std-term">extension module</span></a>s that these modules depend on. Extension
modules are <code class="docutils literal notranslate"><span class="pre">.pyd</span></code> files on Windows and <code class="docutils literal notranslate"><span class="pre">.so</span></code> files on other platforms. The
directory with the platform-independent Python modules is called <code class="docutils literal notranslate"><span class="pre">prefix</span></code>.
The directory with the extension modules is called <code class="docutils literal notranslate"><span class="pre">exec_prefix</span></code>.</p>
<p>The <span class="target" id="index-2"></span><a class="reference internal" href="../using/cmdline.xhtml#envvar-PYTHONHOME"><code class="xref std std-envvar docutils literal notranslate"><span class="pre">PYTHONHOME</span></code></a> environment variable may be used to set the <code class="docutils literal notranslate"><span class="pre">prefix</span></code>
and <code class="docutils literal notranslate"><span class="pre">exec_prefix</span></code> locations. Otherwise these directories are found by using
the Python executable as a starting point and then looking for various ‘landmark’
files and directories. Note that any symbolic links are followed so the real
Python executable location is used as the search starting point. The Python
executable location is called <code class="docutils literal notranslate"><span class="pre">home</span></code>.</p>
<p>Once <code class="docutils literal notranslate"><span class="pre">home</span></code> is determined, the <code class="docutils literal notranslate"><span class="pre">prefix</span></code> directory is found by first looking
for <code class="file docutils literal notranslate"><span class="pre">python</span><em><span class="pre">majorversion</span></em><em><span class="pre">minorversion</span></em><span class="pre">.zip</span></code> (<code class="docutils literal notranslate"><span class="pre">python311.zip</span></code>). On Windows
the zip archive is searched for in <code class="docutils literal notranslate"><span class="pre">home</span></code> and on Unix the archive is expected
to be in <code class="file docutils literal notranslate"><span class="pre">lib</span></code>. Note that the expected zip archive location is added to the
module search path even if the archive does not exist. If no archive was found,
Python on Windows will continue the search for <code class="docutils literal notranslate"><span class="pre">prefix</span></code> by looking for <code class="file docutils literal notranslate"><span class="pre">Lib\os.py</span></code>.
Python on Unix will look for <code class="file docutils literal notranslate"><span class="pre">lib/python</span><em><span class="pre">majorversion</span></em><span class="pre">.</span><em><span class="pre">minorversion</span></em><span class="pre">/os.py</span></code>
(<code class="docutils literal notranslate"><span class="pre">lib/python3.11/os.py</span></code>). On Windows <code class="docutils literal notranslate"><span class="pre">prefix</span></code> and <code class="docutils literal notranslate"><span class="pre">exec_prefix</span></code> are the same,
however on other platforms <code class="file docutils literal notranslate"><span class="pre">lib/python</span><em><span class="pre">majorversion</span></em><span class="pre">.</span><em><span class="pre">minorversion</span></em><span class="pre">/lib-dynload</span></code>
(<code class="docutils literal notranslate"><span class="pre">lib/python3.11/lib-dynload</span></code>) is searched for and used as an anchor for
<code class="docutils literal notranslate"><span class="pre">exec_prefix</span></code>. On some platforms <code class="file docutils literal notranslate"><span class="pre">lib</span></code> may be <code class="file docutils literal notranslate"><span class="pre">lib64</span></code> or another value,
see <a class="reference internal" href="sys.xhtml#sys.platlibdir" title="sys.platlibdir"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.platlibdir</span></code></a> and <span class="target" id="index-3"></span><a class="reference internal" href="../using/cmdline.xhtml#envvar-PYTHONPLATLIBDIR"><code class="xref std std-envvar docutils literal notranslate"><span class="pre">PYTHONPLATLIBDIR</span></code></a>.</p>
<p>Once found, <code class="docutils literal notranslate"><span class="pre">prefix</span></code> and <code class="docutils literal notranslate"><span class="pre">exec_prefix</span></code> are available at <a class="reference internal" href="sys.xhtml#sys.prefix" title="sys.prefix"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.prefix</span></code></a> and
<a class="reference internal" href="sys.xhtml#sys.exec_prefix" title="sys.exec_prefix"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.exec_prefix</span></code></a> respectively.</p>
<p>Finally, the <a class="reference internal" href="site.xhtml#module-site" title="site: Module responsible for site-specific configuration."><code class="xref py py-mod docutils literal notranslate"><span class="pre">site</span></code></a> module is processed and <code class="file docutils literal notranslate"><span class="pre">site-packages</span></code> directories
are added to the module search path. A common way to customize the search path is
to create <a class="reference internal" href="site.xhtml#module-sitecustomize" title="sitecustomize"><code class="xref py py-mod docutils literal notranslate"><span class="pre">sitecustomize</span></code></a> or <a class="reference internal" href="site.xhtml#module-usercustomize" title="usercustomize"><code class="xref py py-mod docutils literal notranslate"><span class="pre">usercustomize</span></code></a> modules as described in
the <a class="reference internal" href="site.xhtml#module-site" title="site: Module responsible for site-specific configuration."><code class="xref py py-mod docutils literal notranslate"><span class="pre">site</span></code></a> module documentation.</p>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>Certain command line options may further affect path calculations.
See <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-E"><code class="xref std std-option docutils literal notranslate"><span class="pre">-E</span></code></a>, <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-I"><code class="xref std std-option docutils literal notranslate"><span class="pre">-I</span></code></a>, <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-s"><code class="xref std std-option docutils literal notranslate"><span class="pre">-s</span></code></a> and <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-S"><code class="xref std std-option docutils literal notranslate"><span class="pre">-S</span></code></a> for further details.</p>
</div>
<section id="virtual-environments">
<h2 class="sigil_not_in_toc">Virtual environments</h2>
<p>If Python is run in a virtual environment (as described at <a class="reference internal" href="../tutorial/venv.xhtml#tut-venv"><span class="std std-ref">Virtual Environments and Packages</span></a>)
then <code class="docutils literal notranslate"><span class="pre">prefix</span></code> and <code class="docutils literal notranslate"><span class="pre">exec_prefix</span></code> are specific to the virtual environment.</p>
<p>If a <code class="docutils literal notranslate"><span class="pre">pyvenv.cfg</span></code> file is found alongside the main executable, or in the
directory one level above the executable, the following variations apply:</p>
<ul class="simple">
<li><p>If <code class="docutils literal notranslate"><span class="pre">home</span></code> is an absolute path and <span class="target" id="index-4"></span><a class="reference internal" href="../using/cmdline.xhtml#envvar-PYTHONHOME"><code class="xref std std-envvar docutils literal notranslate"><span class="pre">PYTHONHOME</span></code></a> is not set, this
path is used instead of the path to the main executable when deducing <code class="docutils literal notranslate"><span class="pre">prefix</span></code>
and <code class="docutils literal notranslate"><span class="pre">exec_prefix</span></code>.</p></li>
</ul>
</section>
<section id="pth-files">
<h2 class="sigil_not_in_toc">_pth files</h2>
<p>To completely override <a class="reference internal" href="sys.xhtml#sys.path" title="sys.path"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.path</span></code></a> create a <code class="docutils literal notranslate"><span class="pre">._pth</span></code> file with the same
name as the shared library or executable (<code class="docutils literal notranslate"><span class="pre">python._pth</span></code> or <code class="docutils literal notranslate"><span class="pre">python311._pth</span></code>).
The shared library path is always known on Windows, however it may not be
available on other platforms. In the <code class="docutils literal notranslate"><span class="pre">._pth</span></code> file specify one line for each path
to add to <a class="reference internal" href="sys.xhtml#sys.path" title="sys.path"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.path</span></code></a>. The file based on the shared library name overrides
the one based on the executable, which allows paths to be restricted for any
program loading the runtime if desired.</p>
<p>When the file exists, all registry and environment variables are ignored,
isolated mode is enabled, and <a class="reference internal" href="site.xhtml#module-site" title="site: Module responsible for site-specific configuration."><code class="xref py py-mod docutils literal notranslate"><span class="pre">site</span></code></a> is not imported unless one line in the
file specifies <code class="docutils literal notranslate"><span class="pre">import</span> <span class="pre">site</span></code>. Blank paths and lines starting with <code class="docutils literal notranslate"><span class="pre">#</span></code> are
ignored. Each path may be absolute or relative to the location of the file.
Import statements other than to <code class="docutils literal notranslate"><span class="pre">site</span></code> are not permitted, and arbitrary code
cannot be specified.</p>
<p>Note that <code class="docutils literal notranslate"><span class="pre">.pth</span></code> files (without leading underscore) will be processed normally
by the <a class="reference internal" href="site.xhtml#module-site" title="site: Module responsible for site-specific configuration."><code class="xref py py-mod docutils literal notranslate"><span class="pre">site</span></code></a> module when <code class="docutils literal notranslate"><span class="pre">import</span> <span class="pre">site</span></code> has been specified.</p>
</section>
<section id="embedded-python">
<h2 class="sigil_not_in_toc">Embedded Python</h2>
<p>If Python is embedded within another application <a class="reference internal" href="../c-api/init.xhtml#c.Py_InitializeFromConfig" title="Py_InitializeFromConfig"><code class="xref c c-func docutils literal notranslate"><span class="pre">Py_InitializeFromConfig()</span></code></a> and
the <a class="reference internal" href="../c-api/init_config.xhtml#c.PyConfig" title="PyConfig"><code class="xref c c-type docutils literal notranslate"><span class="pre">PyConfig</span></code></a> structure can be used to initialize Python. The path specific
details are described at <a class="reference internal" href="../c-api/init_config.xhtml#init-path-config"><span class="std std-ref">Python Path Configuration</span></a>.</p>
<div class="admonition seealso">
<p class="admonition-title">See also</p>
<ul class="simple">
<li><p><a class="reference internal" href="../using/windows.xhtml#windows-finding-modules"><span class="std std-ref">Finding modules</span></a> for detailed Windows notes.</p></li>
<li><p><a class="reference internal" href="../using/unix.xhtml#using-on-unix"><span class="std std-ref">Using Python on Unix platforms</span></a> for Unix details.</p></li>
</ul>
</div>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
</body>
</html>