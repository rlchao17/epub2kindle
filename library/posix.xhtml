<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="posix — The most common POSIX system calls" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/posix.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="This module provides access to operating system functionality that is standardized by the C Standard and the POSIX standard (a thinly disguised Unix interface). Availability: Unix. Do not import th..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="This module provides access to operating system functionality that is standardized by the C Standard and the POSIX standard (a thinly disguised Unix interface). Availability: Unix. Do not import th..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>posix — The most common POSIX system calls</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    
    <link rel="canonical" href="https://docs.python.org/3/library/posix.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-posix">
<span id="posix-the-most-common-posix-system-calls"></span><h1><code class="xref py py-mod docutils literal notranslate"><span class="pre">posix</span></code> — The most common POSIX system calls</h1>
<hr class="docutils" />
<p>This module provides access to operating system functionality that is
standardized by the C Standard and the POSIX standard (a thinly disguised Unix
interface).</p>
<div class="availability docutils container">
<p><a class="reference internal" href="intro.xhtml#availability"><span class="std std-ref">Availability</span></a>: Unix.</p>
</div>
<p id="index-0"><strong>Do not import this module directly.</strong>  Instead, import the module <a class="reference internal" href="os.xhtml#module-os" title="os: Miscellaneous operating system interfaces."><code class="xref py py-mod docutils literal notranslate"><span class="pre">os</span></code></a>,
which provides a <em>portable</em> version of this interface.  On Unix, the <a class="reference internal" href="os.xhtml#module-os" title="os: Miscellaneous operating system interfaces."><code class="xref py py-mod docutils literal notranslate"><span class="pre">os</span></code></a>
module provides a superset of the <a class="reference internal" href="#module-posix" title="posix: The most common POSIX system calls (normally used via module os). (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">posix</span></code></a> interface.  On non-Unix operating
systems the <a class="reference internal" href="#module-posix" title="posix: The most common POSIX system calls (normally used via module os). (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">posix</span></code></a> module is not available, but a subset is always
available through the <a class="reference internal" href="os.xhtml#module-os" title="os: Miscellaneous operating system interfaces."><code class="xref py py-mod docutils literal notranslate"><span class="pre">os</span></code></a> interface.  Once <a class="reference internal" href="os.xhtml#module-os" title="os: Miscellaneous operating system interfaces."><code class="xref py py-mod docutils literal notranslate"><span class="pre">os</span></code></a> is imported, there is
<em>no</em> performance penalty in using it instead of <a class="reference internal" href="#module-posix" title="posix: The most common POSIX system calls (normally used via module os). (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">posix</span></code></a>.  In addition,
<a class="reference internal" href="os.xhtml#module-os" title="os: Miscellaneous operating system interfaces."><code class="xref py py-mod docutils literal notranslate"><span class="pre">os</span></code></a> provides some additional functionality, such as automatically calling
<a class="reference internal" href="os.xhtml#os.putenv" title="os.putenv"><code class="xref py py-func docutils literal notranslate"><span class="pre">putenv()</span></code></a> when an entry in <code class="docutils literal notranslate"><span class="pre">os.environ</span></code> is changed.</p>
<p>Errors are reported as exceptions; the usual exceptions are given for type
errors, while errors reported by the system calls raise <a class="reference internal" href="exceptions.xhtml#OSError" title="OSError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">OSError</span></code></a>.</p>
<section id="large-file-support">
<span id="posix-large-files"></span><h2>Large File Support</h2>
<p id="index-1">Several operating systems (including AIX and Solaris) provide
support for files that are larger than 2 GiB from a C programming model where
<span class="c-expr sig sig-inline c"><span class="kt">int</span></span> and <span class="c-expr sig sig-inline c"><span class="kt">long</span></span> are 32-bit values. This is typically accomplished
by defining the relevant size and offset types as 64-bit values. Such files are
sometimes referred to as <em class="dfn">large files</em>.</p>
<p>Large file support is enabled in Python when the size of an <code class="xref c c-type docutils literal notranslate"><span class="pre">off_t</span></code> is
larger than a <span class="c-expr sig sig-inline c"><span class="kt">long</span></span> and the <span class="c-expr sig sig-inline c"><span class="kt">long</span><span class="w"> </span><span class="kt">long</span></span> is at least as large
as an <code class="xref c c-type docutils literal notranslate"><span class="pre">off_t</span></code>.
It may be necessary to configure and compile Python with certain compiler flags
to enable this mode. For example, with Solaris 2.6 and 2.7 you need to do
something like:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">CFLAGS</span><span class="o">=</span><span class="s2">&quot;`getconf LFS_CFLAGS`&quot;</span> <span class="n">OPT</span><span class="o">=</span><span class="s2">&quot;-g -O2 $CFLAGS&quot;</span> \
        <span class="o">./</span><span class="n">configure</span>
</pre></div>
</div>
<p>On large-file-capable Linux systems, this might work:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">CFLAGS</span><span class="o">=</span><span class="s1">&#39;-D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64&#39;</span> <span class="n">OPT</span><span class="o">=</span><span class="s2">&quot;-g -O2 $CFLAGS&quot;</span> \
        <span class="o">./</span><span class="n">configure</span>
</pre></div>
</div>
</section>
<section id="notable-module-contents">
<span id="posix-contents"></span><h2>Notable Module Contents</h2>
<p>In addition to many functions described in the <a class="reference internal" href="os.xhtml#module-os" title="os: Miscellaneous operating system interfaces."><code class="xref py py-mod docutils literal notranslate"><span class="pre">os</span></code></a> module documentation,
<a class="reference internal" href="#module-posix" title="posix: The most common POSIX system calls (normally used via module os). (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">posix</span></code></a> defines the following data item:</p>
<dl class="py data">
<dt class="sig sig-object py" id="posix.environ">
<span class="sig-prename descclassname"><span class="pre">posix.</span></span><span class="sig-name descname"><span class="pre">environ</span></span></dt>
<dd><p>A dictionary representing the string environment at the time the interpreter
was started. Keys and values are bytes on Unix and str on Windows. For
example, <code class="docutils literal notranslate"><span class="pre">environ[b'HOME']</span></code> (<code class="docutils literal notranslate"><span class="pre">environ['HOME']</span></code> on Windows) is the
pathname of your home directory, equivalent to <code class="docutils literal notranslate"><span class="pre">getenv(&quot;HOME&quot;)</span></code> in C.</p>
<p>Modifying this dictionary does not affect the string environment passed on by
<a class="reference internal" href="os.xhtml#os.execv" title="os.execv"><code class="xref py py-func docutils literal notranslate"><span class="pre">execv()</span></code></a>, <a class="reference internal" href="os.xhtml#os.popen" title="os.popen"><code class="xref py py-func docutils literal notranslate"><span class="pre">popen()</span></code></a> or <a class="reference internal" href="os.xhtml#os.system" title="os.system"><code class="xref py py-func docutils literal notranslate"><span class="pre">system()</span></code></a>; if you need to
change the environment, pass <code class="docutils literal notranslate"><span class="pre">environ</span></code> to <a class="reference internal" href="os.xhtml#os.execve" title="os.execve"><code class="xref py py-func docutils literal notranslate"><span class="pre">execve()</span></code></a> or add
variable assignments and export statements to the command string for
<a class="reference internal" href="os.xhtml#os.system" title="os.system"><code class="xref py py-func docutils literal notranslate"><span class="pre">system()</span></code></a> or <a class="reference internal" href="os.xhtml#os.popen" title="os.popen"><code class="xref py py-func docutils literal notranslate"><span class="pre">popen()</span></code></a>.</p>
<div class="versionchanged">
<p><span class="versionmodified changed">Changed in version 3.2: </span>On Unix, keys and values are bytes.</p>
</div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>The <a class="reference internal" href="os.xhtml#module-os" title="os: Miscellaneous operating system interfaces."><code class="xref py py-mod docutils literal notranslate"><span class="pre">os</span></code></a> module provides an alternate implementation of <code class="docutils literal notranslate"><span class="pre">environ</span></code>
which updates the environment on modification. Note also that updating
<a class="reference internal" href="os.xhtml#os.environ" title="os.environ"><code class="xref py py-data docutils literal notranslate"><span class="pre">os.environ</span></code></a> will render this dictionary obsolete. Use of the
<a class="reference internal" href="os.xhtml#module-os" title="os: Miscellaneous operating system interfaces."><code class="xref py py-mod docutils literal notranslate"><span class="pre">os</span></code></a> module version of this is recommended over direct access to the
<a class="reference internal" href="#module-posix" title="posix: The most common POSIX system calls (normally used via module os). (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">posix</span></code></a> module.</p>
</div>
</dd></dl>

</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>